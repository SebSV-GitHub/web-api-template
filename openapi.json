{
  "openapi": "3.1.0",
  "info": {
    "title": "Template api",
    "description": "Web api template with use cases examples",
    "contact": {
      "name": "Sebastián Suárez Valencia",
      "url": "https://sebsv.com/",
      "email": "contact@sebsv.com"
    },
    "license": {
      "name": "MIT License",
      "identifier": "MIT"
    },
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Service health",
      "description": "Uitilites for service status validation"
    },
    {
      "name": "User",
      "description": "Users modules"
    },
    {
      "name": "Authentication",
      "description": "Authentication modules"
    }
  ],
  "servers": [
    {
      "url": "http://localhost:{port}/api",
      "description": "Local",
      "variables": {
        "port": {
          "default": "8080"
        }
      }
    }
  ],
  "paths": {
    "/health-check": {
      "get": {
        "operationId": "health-check",
        "tags": ["Service health"],
        "summary": "Service health check endpoint",
        "description": "Returns a the health status of the service",
        "responses": {
          "200": {
            "description": "Service is up and running"
          }
        }
      }
    },
    "/users": {
      "get": {
        "operationId": "get-all-users",
        "tags": ["User"],
        "summary": "Retieves all the users",
        "description": "Returns an array of all the existing users in the database",
        "responses": {
          "200": {
            "description": "Array of users"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "operationId": "create-user",
        "tags": ["User"],
        "summary": "Create a new user",
        "description": "Creates a new user record in the database",
        "requestBody": {
          "description": "User input",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "name": "John Doe",
                "username": "johndoe",
                "password": "s3cr3t"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User created"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "description": "Username already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "message": "Username already in use"
                }
              }
            }
          }
        }
      }
    },
    "/authentications": {
      "post": {
        "operationId": "authenticate",
        "tags": ["Authentication"],
        "summary": "User authentication",
        "description": "Uses the username and password to return an Authorization token",
        "requestBody": {
          "description": "User credentials",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "username": "johndoe",
                "password": "s3cr3t"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User authenticated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImpvaG5kb2UiLCJpYXQiOjE2OTcwNzI0NTQsImV4cCI6MTY5NzA3MzM1NH0.fElTpx_9cBNQreJe7Fz12ggM-xh39KS-Y2Iqvdm4bz8"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "403": {
            "description": "Wrong username or password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "error": {
        "description": "API error definition",
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Invalid request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      },
      "500": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      }
    }
  }
}
